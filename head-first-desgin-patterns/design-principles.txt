* Identify the aspects of your application that vary and separate them from what stays the same.
* Program to an interface, not an implementation 
* Prefer composition over inheritance (HAS-A over IS-A)
* Strive for loosly coupled design with objects that interact

Definitions
* Observer Pattern: This pattern defines one-to-many dependency between objects
so that when one object changes state all of its dependencies are notified and updated
automatically.

